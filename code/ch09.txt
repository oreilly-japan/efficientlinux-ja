## ======================================================================
$ head -n5 /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
smith:x:1000:1000:Aisha Smith,,,:/home/smith:/bin/bash
jones:x:1001:1001:Bilbo Jones,,,:/home/jones:/bin/bash

## ======================================================================
$ cut -d: -f1 /etc/passwd | sort
avahi
backup
bin
daemon

## ======================================================================
$ awk -F: '$3>=1000 {print $1}' /etc/passwd
jones
smith

## ======================================================================
$ awk -F: '$3>=1000 {print $1}' /etc/passwd \
| xargs -I@ echo "Hi there, @!"
Hi there, jones!
Hi there, smith!

## ======================================================================
$ awk -F: '$3>=1000 {print $1}' /etc/passwd \
| xargs -I@ echo 'echo "Hi there, @!" | mail -s greetings @'
echo "Hi there, jones!" | mail -s greetings jones
echo "Hi there, smith!" | mail -s greetings smith

## ======================================================================
$ awk -F: '$3>=1000 {print $1}' /etc/passwd \
| xargs -I@ echo 'echo "Hi there, @!" | mail -s greetings @' \
| bash

## ======================================================================
$ find $HOME -name animals.txt -print
/home/smith/Work/Writing/Books/Lists/animals.txt

## ======================================================================
$ find $HOME -print > $HOME/.ALLFILES
$ head -n3 $HOME/.ALLFILES
/home/smith
/home/smith/Work
/home/smith/Work/resume.pdf

## ======================================================================
$ grep animals.txt $HOME/.ALLFILES
/home/smith/Work/Writing/Books/Lists/animals.txt

## ======================================================================
$ chmod +x ff
$ echo $PATH
/home/smith/bin:/usr/local/bin:/usr/bin:/bin
$ mv ff ~/bin

## ======================================================================
$ ff animal
/home/smith/Work/Writing/Books/Lists/animals.txt
$ ff -i animal | less
/home/smith/Work/Writing/Books/Lists/animals.txt
/home/smith/Vacations/Zoos/Animals/pandas.txt
/home/smith/Vacations/Zoos/Animals/tigers.txt
$ ff -i animal | wc -l
16

## ======================================================================
$ whois example.com | less
Domain Name: EXAMPLE.COM
Registry Domain ID: 2336799_DOMAIN_COM-VRSN
Registrar WHOIS Server: whois.iana.org
Updated Date: 2021-08-14T07:01:44Z
Creation Date: 1995-08-14T04:00:00Z
Registry Expiry Date: 2022-08-13T04:00:00Z

## ======================================================================
$ whois example.com | grep 'Registry Expiry Date:'
Registry Expiry Date: 2022-08-13T04:00:00Z
$ whois example.com | grep 'Registry Expiry Date:' | awk '{print $4}'
2022-08-13T04:00:00Z

## ======================================================================
$ date --date 2022-08-13T04:00:00Z
Sat Aug 13 00:00:00 EDT 2022
$ date --date 2022-08-13T04:00:00Z +'%Y-%m-%d'
2022-08-13

## ======================================================================
$ echo $(whois example.com | grep 'Registry Expiry Date:' | awk '{print $4}')
2022-08-13T04:00:00Z
$ date \
--date $(whois example.com \
| grep 'Registry Expiry Date:' \
| awk '{print $4}') \
+'%Y-%m-%d'
2022-08-13

## ======================================================================
$ ./check-expiry example.com
2022-08-13      example.com

## ======================================================================
$ ./check-expiry-all &> expiry.txt &

## ======================================================================
$ cat expiry.txt
2022-08-13      example.com
2022-05-26      oreilly.com
2022-09-17      efficientlinux.com

## ======================================================================
$ sort -n expiry.txt | head -n1
2022-05-26      oreilly.com

## ======================================================================
$ awk "\$1<=\"$(date +%Y-%m-%d)\"" expiry.txt

## ======================================================================
$ date
2023年 10月  1日 日曜日 17:20:01 JST

## ======================================================================
$ grep -w NJ areacodes.txt
201     NJ      Hackensack, Jersey City
551     NJ      Hackensack, Jersey City
609     NJ      Atlantic City, Trenton, southeast and central west

## ======================================================================
$ grep -w 202 areacodes.txt
202     DC      Washington

## ======================================================================
$ grep Washing areacodes.txt
202     DC      Washington
227     MD      Silver Spring, Washington suburbs, Frederick
240     MD      Silver Spring, Washington suburbs, Frederick

## ======================================================================
$ wc -l areacodes.txt
375 areacodes.txt

## ======================================================================
$ cut -f2 areacodes.txt | sort | uniq -c | sort -nr | head -n1
38 CA

## ======================================================================
$ awk -F'\t' '{printf "%s,%s,\"%s\"\n", $1, $2, $3}' areacodes.txt \
> areacodes.csv
$ head -n3 areacodes.csv
201,NJ,"Hackensack, Jersey City (201/551 overlay)"
202,DC,"Washington"
203,CT,"New Haven, Stamford, southwestern (475 will overlay 203)"

## ======================================================================
$ awk '$2~/^NJ$/{ac=ac FS $1} END {print "NJ:" ac}' areacodes.txt
NJ: 201 551 609 732 848 856 862 908 973

## ======================================================================
$ awk '{arr[$2]=arr[$2] " " $1} \
END {for (i in arr) print i ":" arr[i]}' areacodes.txt \
| sort
AB: 403 780
AK: 907
AL: 205 251 256 334 659
WY: 307

## ======================================================================
$ ./areacode 617
617     MA      Boston (617/857 overlay)
857     MA      Boston (617/857 overlay) (see also 781/339)

## ======================================================================
$ wget https://www.soumu.go.jp/main_content/000141817.pdf

$ pdfgrep . ./000141817.pdf \
| sed 's/^ \+//' \
| sed 's/^\([0-9]\{1,3\}\|[0-9]\{1,3\}\-[1-3]\) \+/\1,/' \
| sed 's/ \+\([0-9]\{1,4\}\)/,\1/' \
| sed 's/ \+\([B-E]\)/,\1/' \
| awk -F"," '{printf "%s,%s,%s,%sX", $1, $3, $4, $2}' \
| sed 's/,,,X\([0-9]\)/\n\1/g' \
| sed -e 's/X//g; s/,,,//g; s/\o14//g;' \
| awk -F"," '{printf "%s,%s,%s,%s\n", $1, $4, $2, $3}' \
> ./areacodes.txt

$ ./areacode 111
111,岩手県釜石市、上閉伊郡,193,DE

## ======================================================================
$ touch vault
$ chmod 600 vault
$ emacs vault
sally   fake1   google   google.com      account
ssmith  fake2   dropbox  dropbox.com     account for work
s999    fake3   bank     Bank Of America account, bankofamerica.com
smith2  fake4   blog     My blog at wordpress.org
birdy   fake5   dropbox2 dropbox.com     account for home
$ cat vault
sally   fake1   google   google.com      account
ssmith  fake2   dropbox  dropbox.com     account for work
s999    fake3   bank     Bank Of America account, bankofamerica.com
smith2  fake4   blog     My blog at wordpress.org
birdy   fake5   dropbox2 dropbox.com     account for home
sally   fake1   google.com account
ssmith  fake2   dropbox.com account for work
s999    fake3   Bank of America account, bankofamerica.com
smith2  fake4   My blog at wordpress.org
birdy   fake5   dropbox.com account for home

## ======================================================================
$ mkdir ~/etc
$ mv vault ~/etc

## ======================================================================
$ cd ~/etc
$ grep sally vault
sally   fake1   google.com account
$ grep work vault
ssmith  fake2   dropbox.com account for work
$ grep drop vault
ssmith  fake2   dropbox.com account for work
birdy   fake5   dropbox.com account for home

## ======================================================================
$ chmod 700 pman
$ mv pman ~/bin

## ======================================================================
$ pman goog
sally   fake1   google.com account
$ pman account
sally   fake1   google.com account
ssmith  fake2   dropbox.com account for work
s999    fake3   Bank of America account, bankofamerica.com
birdy   fake5   dropbox.com account for home
$ pman facebook

## ======================================================================
$ pman
pman: look up passwords by string
Usage: pman string
$ pman smith
ssmith  fake2   dropbox.com account for work
smith2  fake4   My blog at wordpress.org
$ pman xyzzy
pman: no matches for 'xyzzy'

## ======================================================================
$ pman dropbox
ssmith  fake2   dropbox dropbox.com account for work
$ pman drop
ssmith  fake2   dropbox dropbox.com account for work
birdy   fake5   dropbox2        dropbox.com account for home

## ======================================================================
$ gpg --quick-generate-keyyour_email_address default default never

## ======================================================================
$ cd ~/etc
$ gpg -e -ryour_email_address vault
$ ls vault*
vault   vault.gpg

## ======================================================================
$ gpg -d -q vault.gpg
Passphrase: xxxxxxxx
sally   fake1   google  google.com account
ssmith  fake2   dropbox dropbox.com account for work

## ======================================================================
$ pman dropbox
Passphrase: xxxxxxxx
ssmith  fake2   dropbox dropbox.com account for work
$ pman drop
Passphrase: xxxxxxxx
ssmith  fake2   dropbox dropbox.com account for work
birdy   fake5   dropbox2    dropbox.com account for home

## ======================================================================
decrypted=$(gpg -d -q "$DATABASE" | grep -v '^#')

## ======================================================================
$ cd ~/etc
$ gpg --output vault --decrypt vault.gpg
Passphrase: xxxxxxxx
gpg: encrypted with 3072-bit RSA key, ID  GnuPG ID, created 2023-08-11
"your_email_address "

$ gpg -e -ryour_email_address vault
File 'vault.gpg' exists. Overwrite? (y/N) y

$ rm vault

## ======================================================================
export GPG_TTY=$(tty)

## ======================================================================
(load-library "pinentry")
(setq epa-pinentry-mode 'loopback)
(setq epa-file-encrypt-to "GnuPG ID here")
(pinentry-start)

## ======================================================================
let g:GPGPreferArmor=1
let g:GPGDefaultRecipients=["GnuPG ID here"]


## ======================================================================
alias pwedit="$EDITOR $HOME/etc/vault.gpg"

